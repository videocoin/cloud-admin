syntax = "proto3";

package proto;

option go_package = "proto";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "health.proto";

// Enable custom Marshal method.
option (gogoproto.marshaler_all) = true;
// Enable custom Unmarshal method.
option (gogoproto.unmarshaler_all) = true;
// Enable custom Size method (Required by Marshal and Unmarshal).
option (gogoproto.sizer_all) = true;
// Enable registration with golang/protobuf for the grpc-gateway.
option (gogoproto.goproto_registration) = true;
// Enable generation of XXX_MessageName methods for grpc-go/status.
option (gogoproto.messagename_all) = false;


service VerifierService {
  rpc Verify(VerifyRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/api/v1/verify"
      body: "*"
    };
  };
  rpc Health(google.protobuf.Empty) returns (HealthStatus) {
    option (google.api.http) = {
      get : "/healthz"
    };
  };
}

message VerifyRequest {
    int64 stream_id = 1;
    int64 bitrate = 2;
    int64 input_id = 3;
    int64 output_id = 4;
    string source_chunk_url = 5;
    string result_chunk_url = 6;
    string tx_hash = 7;
}
