syntax = "proto3";

package proto;

option go_package = "proto";

import "google/protobuf/empty.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "work_order.proto";
import "profile.proto";

service Transcoders {
    rpc AssignWork(Assignment) returns (google.protobuf.Empty) {};
};

message Transcoder {
    string id = 1;
    int64 cpu_cores = 2;
    double cpu_mhz = 3;
    int64 total_memory = 4;
    string address = 5;
    TranscoderStatus status = 6;
}

message Assignment {
    WorkOrder workorder = 1;
    Profile profile = 2;
}

enum TranscoderStatus {
    option (gogoproto.goproto_enum_prefix) = false;
    option (gogoproto.enum_customname) = "TranscoderStatus";

    available = 0 [ (gogoproto.enumvalue_customname) = "TranscoderStatusAvailable" ];
    offline = 1 [ (gogoproto.enumvalue_customname) = "TranscoderStatusOffline" ];
    error = 2 [ (gogoproto.enumvalue_customname) = "TranscoderStatusError" ];
}