apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    component: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailableCount }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: {{ .Release.Name }}
      {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      automountServiceAccountToken: true
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | replace "#" ""}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash", "-c", "source /vault/secrets/common && source /vault/secrets/config && gunicorn project.wsgi.staging:application -b 0.0.0.0:8000 -w 4 -k tornado"]
          ports:
            - containerPort: {{ .Values.service.internalPort }}
#          livenessProbe:
#            httpGet:
#              path: /healthz
#              port: {{ .Values.service.internalPort }}
#          readinessProbe:
#            httpGet:
#              path: /healthz
#              port: {{ .Values.service.internalPort }}
{{ include (print $.Template.BasePath "/_container_env.yaml") . | indent 10 }}
{{ include (print $.Template.BasePath "/_pod_volumes.yaml") . | indent 6 }}
      {{- with .Values.nodeSelector }}
        nodeSelector:
          {{- toYaml . | nindent 8 }}
      {{- end }}
