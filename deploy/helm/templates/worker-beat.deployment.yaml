apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-worker-beat
  labels:
    app: {{ .Chart.Name }}
    component: worker
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      component: worker
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        component: worker
    {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      automountServiceAccountToken: true
      containers:
        - name: {{ .Chart.Name }}-worker-beat
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash", "-c", "source /vault/secrets/common && source /vault/secrets/config && celery beat -A project.celery -l WARNING"]
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}
          {{- if .Values.workerbeat.resources }}
          resources:
{{ toYaml .Values.workerbeat.resources | indent 12 }}
          {{- end }}
      volumes:
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: config
          configMap:
            name: {{ .Chart.Name }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
